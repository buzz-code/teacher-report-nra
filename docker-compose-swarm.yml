version: "3"

services:
    client:
        image: 'ghcr.io/buzz-code/teacher-report-nra-client:latest'
        container_name: client
        depends_on:
            - server
        deploy:
            labels:
                caddy: $DOMAIN_NAME
                caddy.reverse_proxy: '{{upstreams 80}}'
            placement:
                constraints:
                    - node.labels.codeserver != true
                    - node.labels.listenReport != true
        environment:
            PORT: 80
            REACT_APP_API_URL: 'https://api.$DOMAIN_NAME'
        # ports:
        #   - '30003:80'
        networks:
            - private-network
            - caddy
            - elknet

    server:
        image: 'ghcr.io/buzz-code/teacher-report-nra-server:latest'
        container_name: server
        depends_on:
            - database
        deploy:
            labels:
                caddy: api.$DOMAIN_NAME
                caddy.reverse_proxy: '{{upstreams 3000}}'
            placement:
                constraints:
                    - node.labels.codeserver != true
                    - node.labels.listenReport != true
        labels:
            co.elastic.logs/enabled: 'true'
        environment:
            IP_ADDRESS: $IP_ADDRESS
            DOMAIN_NAME: $DOMAIN_NAME
            MYSQL_HOST: $MYSQL_HOST
            MYSQL_USER: $MYSQL_USER
            MYSQL_PASSWORD: $MYSQL_PASSWORD
            MYSQL_DATABASE: $MYSQL_DATABASE
            JWT_SECRET: $JWT_SECRET
            ADMIN_USER: $ADMIN_USER
            SMTP_USER: $SMTP_USER
            SMTP_PASSWORD: $SMTP_PASSWORD
        # ports:
        #   - '30004:3000'
        networks:
            - private-network
            - caddy
            - elknet

    database:
        image: mysql:9.3
        container_name: database
        cap_add:
            - SYS_NICE
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        deploy:
            placement:
                constraints:
                    - node.labels.first == true
        environment:
            MYSQL_DATABASE: $MYSQL_DATABASE
            MYSQL_USER: $MYSQL_USER
            MYSQL_PASSWORD: $MYSQL_PASSWORD
            MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
        volumes:
            - 'db_data:/var/lib/mysql'
        networks:
            - private-network

    phpmyadmin:
        image: phpmyadmin:5.2.1
        container_name: phpmyadmin
        depends_on:
            - database
        deploy:
            labels:
                caddy: sql.$DOMAIN_NAME
                caddy.reverse_proxy: '{{upstreams 80}}'
            placement:
                constraints:
                    - node.labels.listenReport != true
        environment:
            PMA_HOST: $MYSQL_HOST
            MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
        # ports:
        #   - '80'
        networks:
            - private-network
            - caddy

    mysql_dump:
        image: tiredofit/db-backup:4.1.17
        container_name: mysql_dump
        depends_on:
            - database
        environment:
            DB_TYPE: mysql
            DB_HOST: $MYSQL_HOST
            DB_NAME: $MYSQL_DATABASE
            DB_USER: $MYSQL_USER
            DB_PASS: $MYSQL_PASSWORD
            DB_DUMP_BEGIN: '0200'
            DB_CLEANUP_TIME: 10 # clean backups they are older than 10 days
            CHECKSUM: SHA1
            COMPRESSION: GZ
            SPLIT_DB: 'FALSE'
            EXTRA_DUMP_OPTS: '--no-tablespaces'
            CONTAINER_ENABLE_MONITORING: 'FALSE'
        labels:
            co.elastic.logs/enabled: 'true'
        deploy:
            placement:
                constraints:
                    - node.labels.first != true
        volumes:
            - db_backup:/backup
        networks:
            - private-network

volumes:
    db_data:
    db_backup:


networks:
    private-network:
    caddy:
        external: true
    elknet:
        external: true
